{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAGMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,sCAQVC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACxC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBACjBT,EAAMU,gBAAgBL,KADtB,eASZ,OACA,+BAAQJ,IAiBGU,EAbD,SAACX,GAAW,IACfE,EAAkCF,EAAlCE,cAAeQ,EAAmBV,EAAnBU,gBACtB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OCuBvDE,E,4MA7DXC,aAAe,SAACC,GAAS,IAAD,EACEA,EAAMC,OAArBR,EADa,EACbA,KAAMS,EADO,EACPA,MAEb,EAAKC,SAAL,eACKV,EAAOS,K,EAIhBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,e,EAKvBA,aAAe,CACXd,KAAK,GACLC,IAAI,I,EAGRY,MAAQ,EAAKC,a,uDAEJ,IAAD,EACgBC,KAAKF,MAAlBb,EADH,EACGA,KAAMC,EADT,EACSA,IACb,OACI,8BACI,2BAAOe,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHT,MAAOT,EACPmB,SAAUJ,KAAKT,eAGnB,2BAAOU,QAAQ,OAAf,OACA,2BACIC,KAAM,OACNjB,KAAK,MACLkB,GAAG,MACHT,MAAOR,EACPkB,SAAUJ,KAAKT,eACnB,2BAAOW,KAAK,SAASR,MAAM,SAASP,QAASa,KAAKJ,kB,GA3C/CS,aCqCFC,E,4MAnCblB,gBAAkB,SAACL,GAAS,IACjBwB,EAAc,EAAKT,MAAnBS,WACP,EAAKZ,SAAS,CACVY,WAAYA,EAAWC,QAAO,SAACC,EAAUC,GACrC,OAAOA,IAAM3B,Q,EAIzBc,aAAe,SAACY,GAEd,EAAKd,SAAS,CAACY,WAAW,GAAD,mBAAK,EAAKT,MAAMS,YAAhB,CAA4BE,O,EAIvDX,MAAQ,CACJS,WAAY,I,uDAIP,IACAA,EAAcP,KAAKF,MAAnBS,WACP,OAEE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,kBAAC,EAAD,CAAMS,aAAcG,KAAKH,oB,GA1BjBQ,aCClBO,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.42cdbd7b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst TableHeader = () =>{\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n\r\n\r\n\r\n    )\r\n}\r\nconst TableBody = (props) =>{\r\n  const rows = props.characterData.map((row,index)=>{\r\n    return(\r\n        <tr key={index}>\r\n            <td>{row.name}</td>\r\n            <td>{row.job}</td>\r\n            <td>\r\n                <button onClick={()=> \r\n                props.removeCharacter(index)}>Delete</button>\r\n            </td>\r\n        </tr>\r\n\r\n    )\r\n\r\n\r\n  })\r\n    return(\r\n    <tbody>{rows}</tbody>\r\n        \r\n    )\r\n}   \r\nconst Table = (props) => {\r\n    const {characterData, removeCharacter} = props       \r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>\r\n            )\r\n          }\r\n    \r\n\r\n\r\n\r\nexport default Table","import React, {Component} from \"react\";\r\n//import handleSubmit from \"./App.js\";\r\n\r\nclass Form extends Component{\r\n    handleChange = (event)=>{\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n\r\n\r\n    initialState = {\r\n        name:\"\",\r\n        job:\"\",\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    render(){\r\n        const {name, job} = this.state;\r\n        return(\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    \r\n                    />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input \r\n                    type =\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"    \r\n                    value={job}\r\n                    onChange={this.handleChange}/>\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n            \r\n         \r\n\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Form\r\n\r\n","import React, {Component} from \"react\";\r\nimport Table from \"./Table.js\"\r\nimport Form from \"./Form.js\"\r\n\r\nclass App extends Component{\r\n    removeCharacter = (index)=>{\r\n        const {characters} = this.state\r\n        this.setState({\r\n            characters: characters.filter((character,i)=>{\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n    handleSubmit = (character) =>{\r\n\r\n      this.setState({characters:[...this.state.characters, character]})\r\n\r\n\r\n    }\r\n    state = {\r\n        characters: [\r\n            \r\n        ],\r\n    }\r\n    render(){\r\n      const {characters} = this.state\r\n      return(\r\n      \r\n        <div className=\"container\">\r\n          <Table characterData={characters} removeCharacter={this.removeCharacter}/>\r\n          <Form handleSubmit={this.handleSubmit}/>\r\n        </div>\r\n  \r\n  \r\n      )\r\n  \r\n  \r\n    }\r\n  \r\n  }\r\n  export default App\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}